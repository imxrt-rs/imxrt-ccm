name: CI

on: [push, pull_request]

jobs:

  # Ensure code is properly formatted
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt
        override: true
        profile: minimal
    - name: Check library formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --verbose -- --check

  # Make sure the library builds without any features
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check library without features
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --verbose
  
  # Lint the library
  clippy:
    strategy:
      matrix:
        features: ["imxrt-ral/imxrt1062,imxrt1060", "imxrt-ral/imxrt1011,imxrt1010"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy
        override: true
        profile: minimal
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --verbose --features=${{ matrix.features }} -- -D warnings
        name: Lint the library

  # Run tests
  test:
    strategy:
      matrix:
        features: ["imxrt-ral/imxrt1062,imxrt1060", "imxrt-ral/imxrt1011,imxrt1010"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run unit and documentation tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --features=${{ matrix.features }}

  # Make sure documentation builds, and doclinks are valid
  doc:
    strategy:
      matrix:
        features: ["imxrt-ral/imxrt1062,imxrt1060", "imxrt-ral/imxrt1011,imxrt1010"]
    env:
      RUSTDOCFLAGS: -D warnings
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check documentation and doclinks
      uses: actions-rs/cargo@v1
      with:
        command: rustdoc
        args: --features=${{ matrix.features }}
